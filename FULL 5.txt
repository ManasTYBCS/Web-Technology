FULL 5
Assignment 5 Set  A1
<?php
$file_path = 'example.txt'; // Replace 'example.txt' with the path to your file

if (file_exists($file_path)) {
    $file_contents = file_get_contents($file_path);
    $file_size = filesize($file_path);

    if ($file_contents === false) {
        echo "Error reading the file.";
    } else {
        echo "File Contents:<br>";
        echo nl2br($file_contents) . "<br><br>";
        echo "File Size: " . $file_size . " bytes<br>";
    }
} else {
    echo "The file does not exist.";
}
?>



Assignment 5 Set A2


<!--Assignment-5 Set-A Q2-->

<?php

error_reporting(E_ALL);
ini_set('display_errors', 1);

// Database credentials
$servername = "localhost";
$username = "root";
$password = "";
$database = "FileDB";

// Establishing a connection
$conn = new mysqli($servername, $username, $password, $database);

// Checking for any connection error
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Reset all committee statuses to 'idle' upon starting the script
$conn->query("UPDATE Committee SET status = 'idle'");

// ... (Creating tables and inserting initial data as in the previous script)

function displayCommitteeStatus($conn) {
    $result = $conn->query("SELECT name, status FROM Committee");
    if ($result->num_rows > 0) {
        echo "<table border='1'>
                <tr>
                    <th>Committee Name</th>
                    <th>Status</th>
                </tr>";
        while ($row = $result->fetch_assoc()) {
            echo "<tr>
                    <td>" . $row["name"] . "</td>
                    <td>" . $row["status"] . "</td>
                  </tr>";
        }
        echo "</table>";
    } else {
        echo "No committees found!";
    }
    echo "<br>";
}

echo "Committee Status Before Update: <br>";
displayCommitteeStatus($conn);

// If form data is posted, process it
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['title'])) {
    $title = $_POST['title'];
    $checkEvent = $conn->prepare("SELECT eno FROM Event WHERE title = ?");
    $checkEvent->bind_param('s', $title);
    $checkEvent->execute();
    $eventResult = $checkEvent->get_result();
    if ($eventResult->num_rows == 0) {
        die("No matching event found for the title: $title");
    }

    // SQL query to update the committee status based on event title
    $sql = "
        UPDATE Committee
        SET status = 'working'
        WHERE cno IN (
            SELECT cno FROM EventCommittee WHERE eno = (
                SELECT eno FROM Event WHERE title = ?
            )
        )
    ";

    // Preparing and executing the SQL statement
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $title);
    if ($stmt->execute()) {
        echo "Committee status updated successfully!<br>";
    } else {
        echo "Error updating status: " . $stmt->error . "<br>";
    }
    $stmt->close();

    echo "<br>Committee Status After Update: <br>";
    displayCommitteeStatus($conn);
} else {
    // Displaying the form for user input
    echo '
    <form action="" method="post">
        Event Title: <input type="text" name="title">
        <input type="submit" value="Update Committee Status">
    </form>
    ';
}

// Closing the database connection
$conn->close();

?>


<?php

$filename = "item.dat";

// Sample data for the item.dat file
$sampleData = "101, Laptop, 5, 1000
102, Mouse, 10, 20
103, Keyboard, 7, 50
104, Monitor, 3, 150
105, Speaker, 6, 45";

// Create and populate the file if it doesn't exist
if (!file_exists($filename)) {
    file_put_contents($filename, $sampleData);
}

// Open file for reading
$file = fopen($filename, "r");

// Initialize total amount
$totalAmount = 0;

// Start outputting the table
echo "<table border='1'>";

// Output the heading row within the table
echo "<tr><th colspan='5'>PRAKASH STORE INVOICE</th></tr>";
echo "<tr><th>Item Code</th><th>Item Name</th><th>Units Sold</th><th>Rate</th><th>Amount</th></tr>";

// Read each line
while (!feof($file)) {
    $line = trim(fgets($file));  // Get one line
    if ($line == "") continue;  // Skip empty lines

    $parts = explode(",", $line);  // Split line into parts

    $itemCode = trim($parts[0]);
    $itemName = trim($parts[1]);
    $unitsSold = intval(trim($parts[2]));
    $rate = floatval(trim($parts[3]));

    $amount = $unitsSold * $rate;
    $totalAmount += $amount;

    // Output table row
    echo "<tr>";
    echo "<td>{$itemCode}</td>";
    echo "<td>{$itemName}</td>";
    echo "<td>{$unitsSold}</td>";
    echo "<td>{$rate}</td>";
    echo "<td>{$amount}</td>";
    echo "</tr>";
}

// Output total amount
echo "<tr><td colspan='4'>Total Amount</td><td>{$totalAmount}</td></tr>";

echo "</table>";

fclose($file);

?>

Assignment 5 Set B2
<!--Assignment-5 Set-B Q2-->

<?php

$servername = "localhost";
$username = "root"; 
$password = ""; 
$database = "competition_db";

$conn = new mysqli($servername, $username, $password);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$conn->query("CREATE DATABASE IF NOT EXISTS $database");
$conn->select_db($database);

// Check and create tables if they don't exist
if (!$conn->query("SHOW TABLES LIKE 'Student'")->num_rows) {
    $conn->query("CREATE TABLE Student (Stud_id INT PRIMARY KEY, name VARCHAR(255), class VARCHAR(255))");
    $conn->query("INSERT INTO Student VALUES (1, 'Alice', '10A'), (2, 'Bob', '10B'), (3, 'Charlie', '10C')");
}

if (!$conn->query("SHOW TABLES LIKE 'Competition'")->num_rows) {
    $conn->query("CREATE TABLE Competition (c_no INT PRIMARY KEY, c_name VARCHAR(255), type VARCHAR(255))");
    $conn->query("INSERT INTO Competition VALUES (1, 'Math challenge', 'Academic'), (2, 'Coding Challenge', 'Technical'), (3, 'Art Contest', 'Creative')");
}

if (!$conn->query("SHOW TABLES LIKE 'StudentCompetition'")->num_rows) {
    $conn->query("CREATE TABLE StudentCompetition (Stud_id INT, c_no INT, rank INT, year INT, PRIMARY KEY(Stud_id, c_no))");
    $conn->query("INSERT INTO StudentCompetition VALUES (1, 1, 1, 2023), (2, 2, 1, 2023), (3, 3, 1, 2023)");
}

// Fetch 1st rank based on competition name
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['c_name'])) {
    $c_name = $_POST['c_name'];

    $sql = "
        SELECT Student.name, Student.class
        FROM Student
        JOIN StudentCompetition ON Student.Stud_id = StudentCompetition.Stud_id
        JOIN Competition ON StudentCompetition.c_no = Competition.c_no
        WHERE Competition.c_name = ? AND StudentCompetition.rank = 1
    ";

    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $c_name);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "Student Name: " . $row["name"] . "<br>";
            echo "Class: " . $row["class"] . "<br>";
        }
    } else {
        echo "No student secured 1st rank in the given competition.";
    }
    $stmt->close();
} else {
    echo '
    <form action="" method="post">
        Competition Name: <input type="text" name="c_name">
        <input type="submit" value="Find 1st Rank">
    </form>
    ';
}

$conn->close();

?>


Assignment 5 Set C1
<?php

$message = '';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['operation'])) {
        $operation = $_POST['operation'];
        $filename = isset($_POST['filename']) ? $_POST['filename'] : '';

        if ($operation !== 'd' && empty($filename)) {
            $message = "Please enter a filename.";
        } else {
            switch ($operation) {
                case 'a':
                    $message = displayFileType($filename);
                    break;
                case 'b':
                    $message = displayLastAccessTime($filename);
                    break;
                case 'c':
                    $message = displayFileSize($filename);
                    break;
                case 'd':
                    $message = deleteFile($filename);
                    break;
                default:
                    $message = "Invalid operation!";
            }
        }
    }
}

function displayFileType($filename) {
    return "File Type: " . mime_content_type($filename);
}

function displayLastAccessTime($filename) {
    return "Last Access Time: " . date("F d Y H:i:s.", fileatime($filename));
}

function displayFileSize($filename) {
    return "File Size: " . filesize($filename) . " bytes";
}

function deleteFile($filename) {
    if (unlink($filename)) {
        return "File deleted successfully!";
    } else {
        return "Error deleting the file!";
    }
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Operations</title>
</head>
<body>

<h1>File Operations</h1>

<form action="" method="post">
    Enter Filename: <input type="text" name="filename" required>
    <br><br>
    <div>
        <h2>Choose Operation:</h2>
        <ul>
            <li>
                <input type="radio" name="operation" value="a" id="operation_a">
                <label for="operation_a">Display type of file</label>
            </li>
            <li>
                <input type="radio" name="operation" value="b" id="operation_b">
                <label for="operation_b">Display last access time of file</label>
            </li>
            <li>
                <input type="radio" name="operation" value="c" id="operation_c">
                <label for="operation_c">Display the size of file</label>
            </li>
            <li>
                <input type="radio" name="operation" value="d" id="operation_d">
                <label for="operation_d">Delete the file</label>
            </li>
        </ul>
    </div>
    <br>
    <input type="submit" value="Execute">
</form>

<?php
if (!empty($message)) {
    echo "<p>$message</p>";
}
?>

</body>
</html>
Assignment 5 Set C2
<!--Assignment-5 Set-C Q2-->

<?php

$servername = "localhost";
$username = "root";
$password = "";
$database = "property_db";  // Database name

$conn = new mysqli($servername, $username, $password);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create the database if not exists
if (!$conn->query("CREATE DATABASE IF NOT EXISTS $database")) {
    die("Error creating database: " . $conn->error);
}
$conn->select_db($database);

// Drop tables to ensure a clean slate
$conn->query("DROP TABLE IF EXISTS Property");
$conn->query("DROP TABLE IF EXISTS Owner");

// Create the Owner table
$conn->query("
    CREATE TABLE Owner (
        owner_id INT AUTO_INCREMENT PRIMARY KEY,
        oname VARCHAR(255) NOT NULL,
        address VARCHAR(255) NOT NULL,
        phone VARCHAR(15) NOT NULL
    );
");

$conn->query("
    INSERT INTO Owner (oname, address, phone) VALUES 
    ('Shashank', '123 Elm St, Springfield', '123-456-7890'),
    ('Shyam', '456 Oak St, Shelbyville', '987-654-3210'),
    ('Digvijay', '789 Pine St, Capital City', '456-789-0123'),
    ('Nishidh', '012 Maple St, Ogdenville', '321-654-9870'),
    ('Raj', '345 Cedar St, North Haverbrook', '789-012-3456');
");

// Create the Property table
$conn->query("
    CREATE TABLE Property (
        pno INT AUTO_INCREMENT PRIMARY KEY,
        description TEXT NOT NULL,
        area FLOAT NOT NULL,
        owner_id INT,
        FOREIGN KEY (owner_id) REFERENCES Owner(owner_id)
    );
");

$conn->query("
    INSERT INTO Property (description, area, owner_id) VALUES 
    ('Beautiful villa with garden', 250.5, 1),
    ('City center apartment', 85.5, 1),
    ('Hillside retreat property', 280.8, 1),
    ('Modern apartment in city center', 75.2, 4),
    ('Riverside apartment', 110.3, 2),
    ('Countryside farmhouse', 300.0, 3),
    ('Beachfront property', 200.7, 4),
    ('Penthouse with city view', 80.3, 5);
");

$message = '';

if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['oname'])) {
    $oname = $_POST['oname'];

    $sql = "
        SELECT Property.description, Property.area 
        FROM Property 
        JOIN Owner ON Property.owner_id = Owner.owner_id 
        WHERE Owner.oname = ?
    ";

    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $oname);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $message .= "Description: " . $row["description"] . ", Area: " . $row["area"] . "<br>";
        }
    } else {
        $message = "No properties found for the given owner.";
    }
    $stmt->close();
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Properties by Owner</title>
</head>
<body>

<form action="" method="post">
    Enter Owner's Name: <input type="text" name="oname" required>
    <input type="submit" value="Find Properties">
</form>

<?php
if (!empty($message)) {
    echo "<p>$message</p>";
}
?>

</body>
</html>